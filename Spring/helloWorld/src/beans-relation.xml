<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--抽象bean:bean的abstract 属性为true的bean,这样的bean不能被IOC实例化,只能被用来继承-->
    <!--若某一个bean的class属性没有指定,则必须是抽象的bean,只作为属性模板来出现.-->
    <!--但是 attract 和 autowire就会被继承-->
    <bean id="address" class="com.atguigu.spring.beans.autowire.Address"
          p:city="Beijing" p:street="wudokou" abstract="true" />

    <!--<bean id="address2" class="com.atguigu.spring.beans.autowire.Address"-->
          <!--p:city="Beijing" p:street="Dazhongsi"/>-->
    <!-- bean配置的继承:使用bean的parent属性指定继承哪个bean的配置-->
    <bean id="address2" p:street="dazhongsi" parent="address"/>

    <!--依赖的car bean,尽管这个bean在被依赖的时候,但是并没有用在其他的地方的赋值,也要有car这个bean来实现.-->
    <bean id="car" class="com.atguigu.spring.beans.autowire.Car"
          p:brand="benci" p:price="2000000"/>

    <!-- 要求在配置Person时,必须有一个关联的car,换句话说person这个bean依赖于Car这个bean-->
    <bean id="person" class="com.atguigu.spring.beans.autowire.Person"
          p:name="tom" p:address-ref="address2" depends-on="car"/>

</beans>